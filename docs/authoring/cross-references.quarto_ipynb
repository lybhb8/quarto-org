{
  "cells": [
    {
      "cell_type": "markdown",
      "metadata": {},
      "source": [
        "---\n",
        "title: \"交叉引用\" #\"Cross References\"\n",
        "format: html\n",
        "toc-expand: 2\n",
        "toc-depth: 4\n",
        "aliases: \n",
        "  - /docs/authoring/cross-references-listings.html\n",
        "  - /docs/authoring/cross-references-callouts.html\n",
        "---\n",
        "\n",
        "\n",
        "\n",
        "\n",
        "## 概述\n",
        "\n",
        "交叉引用可为图和表等各种实体提供编号引用和超链接，从而方便读者浏览文档。每个可交叉引用的实体都需要一个标签--一个前缀有交叉引用类型的唯一标识符，例如`#fig-element`。例如，这是一个可交叉引用的图：\n",
        "\n",
        "``` markdown\n",
        "![Elephant](elephant.png){#fig-elephant}\n",
        "```\n",
        "\n",
        "标签 (`#fig-elephant`) 的存在使该图可被引用。这样，您就可以使用以下语法在文档的其他地方引用该图：\n",
        "\n",
        "``` markdown\n",
        "See @fig-elephant for an illustration.\n",
        "```\n",
        "\n",
        "下面是将其呈现为 HTML 的效果：\n",
        "\n",
        "![](images/crossref-figure.png){.border fig-alt=\"A line drawing of an elephant. The caption 'Figure 1: Elephant' is centered beneath it.\" width=\"100%\"}\n",
        "\n",
        "请注意，交叉引用标识符必须以其类型（如 `fig-` 或 `tbl-`）开头。因此，标识符 `#fig-elephant` 对于交叉引用是有效的，但标识符 `#elephant` 和 `#elephant-fig` 则无效。\n",
        "\n",
        "::: {#reserved-prefixes}\n",
        "::: {.callout-warning}\n",
        "\n",
        "## Reserved Prefixes|保留前缀\n",
        " \n",
        "除非创建交叉引用，否则请避免在代码单元标签（例如使用 `label` 代码单元选项设置）和元素 ID（使用属性中的 `#` 设置）中使用保留的交叉引用前缀。\n",
        "\n",
        "保留的前缀有 `fig`, `tbl`, `lst`, `tip`, `nte`, `wrn`, `imp`, `cau`, `thm`, `lem`, `cor`, `prp`, `cnj`, `def`, `exm`, `exr`, `sol`, `rem`, `eq`, `sec`。\n",
        "\n",
        "此外，请避免在标签和 ID 中使用下划线 (`_`)，因为这会在使用 LaTeX渲染PDF 时导致一些问题。\n",
        "\n",
        ":::\n",
        ":::\n",
        "\n",
        "Quarto 可以让你创建与图、表、方程、章节、代码列表、定理、证明等的交叉引用。交叉引用还可应用于 Knitr 和 Jupyter 的动态输出。\n",
        "\n",
        "在本页中，你将了解到\n",
        "\n",
        "* 使用`@`语法创建[References|引用](#references引用)的不同方法。\n",
        "* 如何在 LaTeX / PDF 输出中添加 [Lists](#lists列表) 引用。\n",
        "\n",
        "然后，我们将列举你可能需要引用的不同类型元素的语法：\n",
        "\n",
        "* [Floats|浮动](#floats浮动)： [Figures|图片](#figures图片)、[Tables|表格](#tables表格) 和[Code Listings|代码列表](#code-listings代码列表)\n",
        "* 块|Blocks： [Callouts|提示](#callouts提示)、[Theorems and Proofs|定理和证明](#theorems-and-proofs定理与证明)和[Equations|数学公式](#equations公式) \n",
        "* [Sections|章节](#sections章节)\n",
        "\n",
        "还有一些选项可以控制标题和参考文献使用的文本。例如，你可以将 \"Figure 1\" to read \"Fig 1\" or \"fig. 1\"。有关如何自定义交叉引用文本的详细信息，请参阅[选项文档](cross-reference-options.qmd “options documentation”)。\n",
        "\n",
        "## References|引用\n",
        "\n",
        "本页中的示例均使用内联引用的默认语法（例如 `@fig-elephant`），这将导致引用文本为 \"Figure 1\", \"Table 1\"等。\n",
        "\n",
        "可以通过更改内联引用的语法或设置选项来定制内联引用的外观。以下是编写 **交叉引用** 的各种方法及其结果输出：\n",
        "\n",
        "| Type          | Syntax                | Output   |\n",
        "|---------------|-----------------------|----------|\n",
        "| Default       | `@fig-elephant`       | Figure 1 |\n",
        "| Capitalized   | `@Fig-elephant`       | Figure 1 |\n",
        "| Custom Prefix | `[Fig @fig-elephant]` | Fig 1    |\n",
        "| No Prefix     | `[-@fig-elephant]`    | 1        |\n",
        "\n",
        "请注意，大写语法对默认输出没有影响，但如果通过 [option](cross-reference-options.qmd#references “选项”)将默认前缀改为小写（例如 \"fig.\"），则第一个字母确实会大写。\n",
        "\n",
        "这些语法变化不仅适用于 \"图片\"，也适用于 Quarto 中所有可交叉引用的元素，如表格、数学公式、定理等。\n",
        "\n",
        "还可以使用以下语法对交叉引用进行分组：\n",
        "\n",
        "``` markdown\n",
        "如图所示 [@fig-elephant; @fig-panther; @fig-rabbit].\n",
        "```\n",
        "\n",
        "有许多选项可用于进一步定制交叉引用的处理方式。更多详情，请参阅指南[交叉引用选项](cross-reference-options.qmd#references \"Cross Reference Options\")。\n",
        "\n",
        "y## Lists|列表\n",
        "\n",
        "对于 LaTeX / PDF 输出，您可以使用原始 LaTeX 命令 `\\listoffigures`、`\\listoftables` 和 `\\listoflistings`，生成文档中所有图、表等的列表。你可以使用 `lof-title`、`lot-title` 和 `lol-title` 交叉引用选项来定制列表的标题。\n",
        "\n",
        "例如:\n",
        "\n",
        "``` markdown\n",
        "---\n",
        "title: \"My Document\"\n",
        "crossref:\n",
        "  lof-title: \"List of Figures\"\n",
        "format: pdf\n",
        "---\n",
        "\n",
        "\\listoffigures\n",
        "```\n",
        "\n",
        "请注意，列表的默认标题使用上面显示的形式（即 \"List of （<Type\\> ）\"）。\n",
        "\n",
        "## Floats|浮动\n",
        "\n",
        "[Figures](#figures)、[tables](#tables) 和[code listings](#code-listings) 被称为 \"浮动 \"交叉引用。浮动引用可以出现在渲染文档中其定义位置以外的其他位置，即浮动引用，并且通常有标题。\n",
        "\n",
        "除了最常用的浮动交叉引用的紧凑语法外，您还可以使用 div 语法定义浮动交叉引用。当您需要更灵活的交叉引用内容时，请使用 div 语法，例如，将[视频](cross-references-divs.qmd#videos \"video\") 引用为图表。下面的章节包含了 div 语法的基本示例，但您可以在 [交叉引用 div 语法](cross-references-divs.qmd \"Cross-Reference Div Syntax\") 中找到更复杂的示例。 \n",
        "\n",
        "您还可以定义自定义浮动交叉引用类型，以引用图、表和代码列表以外的元素。更多信息，请访问 [自定义浮动交叉引用](cross-references-custom.qmd \"Custom Float Cross-References\")。\n",
        "\n",
        "\n",
        "### Figures|图片\n",
        "\n",
        "如上文 \"概述 \"所述，这是用于创建可交叉引用的图表并对其进行引用的标记符：\n",
        "\n",
        "``` markdown\n",
        "![Elephant](elephant.png){#fig-elephant}\n",
        "\n",
        "See @fig-elephant for an illustration.\n",
        "```\n",
        "\n",
        "请再次注意，交叉引用标识符必须以其类型开头（例如 `#fig-`），并且交叉引用标识符必须全部小写。\n",
        "\n",
        "\n",
        "To create a cross-reference to a figure using div syntax, create a fenced div with an id starting with `fig-`, include the image followed by the caption inside the div:\n",
        "\n",
        "````markdown\n",
        "::: {#fig-elephant}\n",
        "\n",
        "![](elephant.png)\n",
        "\n",
        "An Elephant\n",
        ":::\n",
        "````\n",
        "\n",
        "\n",
        "\n",
        "您可以在[交叉引用 div 语法](cross-references-divs.qmd#figures \"Cross-Reference Div Syntax\")中了解如何使用数字 div 语法。\n",
        "\n",
        "#### 子图 | Subfigures\n",
        "\n",
        "您可能希望创建一个由多个子图组成的图表。为此，请用一个 div（带有自己的标签和标题）将这些图表包围起来，并为每个子图表添加自己的标签和标题（可选）。然后，您可以在引用中引用整个图表，也可以引用单个子图表：\n",
        "\n",
        "``` markdown\n",
        "::: {#fig-elephants layout-ncol=2}\n",
        "\n",
        "![Surus](surus.png){#fig-surus}\n",
        "\n",
        "![Hanno](hanno.png){#fig-hanno}\n",
        "\n",
        "Famous Elephants\n",
        ":::\n",
        "\n",
        "See @fig-elephants for examples. In particular, @fig-hanno.\n",
        "```\n",
        "\n",
        "下面是渲染为 HTML 时的样子：\n",
        "\n",
        "![](images/crossref-subfigures.png){.preview-image .border fig-alt=\"An artistic rendition of Surus, Hannibal's last war elephant, is on the left. Underneath this picture is the caption '(a) Surus.' On the right is a line drawing of Hanno, a famous elephant. Underneath this picture is the caption '(b) Hanno.' The words 'Figure 1: Famous elephants' are centered beneath both pictures. The text 'See fig. 1 for examples. In particular, fig. 1(b).' is underneath this text and is aligned to the left.\" width=\"100%\"}\n",
        "\n",
        "请注意，我们还使用了 `layout-ncol` 属性来指定双栏布局。请参阅[Figures](figures.qmd)一文，了解更多关于图表面板布局的详细信息。\n",
        "\n",
        "#### Computations|计算方法\n",
        "\n",
        "由 Jupyter 和 Knitr 生成的图表还可以相互参照。为此，请在代码块顶部添加 `label `和 `fig-cap` 选项。例如\n",
        "\n",
        "::: panel-tabset\n",
        "##### Jupyter\n",
        "\n",
        "    ```{{python}}\n",
        "    #| label: fig-plot\n",
        "    #| fig-cap: \"Plot\"\n",
        "\n",
        "    import matplotlib.pyplot as plt\n",
        "    plt.plot([1,23,2,4])\n",
        "    plt.show()\n",
        "    ```\n",
        "\n",
        "    例如，见 @fig-plot.\n",
        "\n",
        "![](images/crossref-figure-jupyter.png){fig-alt=\"A line plot with the label 'Figure 1: Plot' centered underneath it. The text 'For example, see fig. 1' is underneath this label and aligned to the left.\"}\n",
        "\n",
        "##### Knitr\n",
        "\n",
        "    ```{{r}}\n",
        "    #| label: fig-plot\n",
        "    #| fig-cap: \"Plot\"\n",
        "\n",
        "    plot(cars)\n",
        "    ```\n",
        "\n",
        "    例如，见 @fig-plot.\n",
        "\n",
        "![](images/crossref-figure-r.png){fig-alt=\"A scatter plot of speed versus distance for the `cars` dataset. The label 'Figure 1: Plot' is centered beneath it. The text 'For example, see fig. 1' is aligned to the left underneath that.\"}\n",
        ":::\n",
        "\n",
        "\n",
        "::: {.callout-tip}\n",
        "\n",
        "## Computed Captions\n",
        "\n",
        "If you need to generate a dynamic caption, instead of using the `fig-cap` or `tbl-cap` code cell option, combine inline code with the [Cross-Reference Div Syntax](/docs/authoring/cross-references-divs.qmd#computed-captions).\n",
        "\n",
        ":::\n",
        "\n",
        "\n",
        "\n",
        "您还可以在一个代码单元中创建多个数字，并将它们作为子图标引用。为此，使用 `fig-cap` 表示主标题，使用 `fig-subcap` 提供子标题数组。例如\n",
        "\n",
        "    ```{{python}}\n",
        "    #| label: fig-plots\n",
        "    #| fig-cap: \"Plots\" \n",
        "    #| fig-subcap:\n",
        "    #|   - \"Plot 1\"\n",
        "    #|   - \"Plot 2\" \n",
        "    #| layout-ncol: 2\n",
        "\n",
        "    import matplotlib.pyplot as plt\n",
        "    plt.plot([1,23,2,4])\n",
        "    plt.show()\n",
        "\n",
        "    plt.plot([8,65,23,90])\n",
        "    plt.show()\n",
        "    ```\n",
        "\n",
        "    See @fig-plots for examples. In particular, @fig-plots-2.\n",
        "\n",
        "![](images/crossref-subfigures-jupyter.png){fig-alt=\"Two line plots side-by-side. The plot on the left has the caption '(a) Plot 1' centered underneath it. The plot on the right has the caption '(b) Plot 2' centered underneath it. The text 'Figure 1: Plots' is centered underneath both of these plots. The text 'See fig. 1 for examples. In particular, fig. 1(b)' is aligned to the left underneath that.\"}\n",
        "\n",
        "请注意，子图标会根据主块标签（如`@fig-plots-1`、`@fig-plots-2`等）自动创建。\n",
        "\n",
        "如果希望子图标标题只包含标识符（如\"(a)\"）而不包含文本标题，则应指定 `fig-subcap: true` 而不是提供明确的子标题文本：\n",
        "\n",
        "```{{python}}\n",
        "#| label: fig-plots\n",
        "#| fig-cap: \"Plots\" \n",
        "#| fig-subcap: true\n",
        "#| layout-ncol: 2\n",
        "```\n",
        "\n",
        "### Tables|表格\n",
        "\n",
        "\n",
        "\n",
        "\n",
        "对于 markdown 表格，请在表格下方添加标题，然后在标题末尾用大括号包含一个 `#tbl-` 标签。例如：\n",
        "\n",
        "``` markdown\n",
        "| Col1 | Col2 | Col3 |\n",
        "|------|------|------|\n",
        "| A    | B    | C    |\n",
        "| E    | F    | G    |\n",
        "| A    | G    | G    |\n",
        "\n",
        ": My Caption {#tbl-letters}\n",
        "\n",
        "See @tbl-letters.\n",
        "```\n",
        "\n",
        "渲染成 HTML 是这样的：\n",
        "\n",
        "![](images/crossref-table.png){fig-alt=\"A table with 3 columns and four rows. The text 'Table 1: My Caption' is above the header column. The text 'See tbl. 1' is aligned to the left underneath the last column.\" width=\"500\"}\n",
        "\n",
        "\n",
        "\n",
        "::: callout-important\n",
        "## 标签前缀 | Label Prefix\n",
        "\n",
        "为了使表格可以交叉引用，其标签必须以 `tbl-` 前缀开头。\n",
        ":::\n",
        "\n",
        "\n",
        "To create a cross-reference to a table using div syntax, create a fenced div with an id starting with `tbl-`, include the table followed by the caption inside the div:\n",
        "\n",
        "````markdown\n",
        "::: {#tbl-letters}\n",
        "\n",
        "| Col1 | Col2 | Col3 |\n",
        "|------|------|------|\n",
        "| A    | B    | C    |\n",
        "| E    | F    | G    |\n",
        "| A    | G    | G    |\n",
        "\n",
        "My Caption\n",
        "\n",
        "::: \n",
        "````\n",
        "\n",
        "\n",
        "\n",
        "有关在表格中使用 div 语法的更多信息，请参阅 [交叉引用 div 语法](cross-references-divs.qmd#tables \"Cross-Reference Div Syntax\")。\n",
        "\n",
        "#### Subtables|子表\n",
        "\n",
        "\n",
        "您可能希望创建一个由多个子表格组成的组合。为此，请创建一个带有主标识符的 div，然后将子标识符（以及可选的标题文本）应用到所包含的表格中。例如\n",
        "\n",
        "``` markdown\n",
        "::: {#tbl-panel layout-ncol=2}\n",
        "| Col1 | Col2 | Col3 |\n",
        "|------|------|------|\n",
        "| A    | B    | C    |\n",
        "| E    | F    | G    |\n",
        "| A    | G    | G    |\n",
        "\n",
        ": First Table {#tbl-first}\n",
        "\n",
        "| Col1 | Col2 | Col3 |\n",
        "|------|------|------|\n",
        "| A    | B    | C    |\n",
        "| E    | F    | G    |\n",
        "| A    | G    | G    |\n",
        "\n",
        ": Second Table {#tbl-second}\n",
        "\n",
        "Main Caption\n",
        ":::\n",
        "\n",
        "See @tbl-panel for details, especially @tbl-second.\n",
        "```\n",
        "\n",
        "渲染成 HTML 时看起来是这样的：\n",
        "\n",
        "![](/docs/authoring/images/crossref-subtable.png){fig-alt=\"Two tables side-by-side. Both tables have 3 columns and 4 rows. The table on the left is titled '(a) First table'. The table on the right is titled '(b) Second Table'. Centered underneath both tables is the text 'Table 1: Main Caption'. The text 'See tbl. 2 for details, especially tbl. 2 (b)' is aligned to the left underneath that.\"}\n",
        "\n",
        "请注意，表格的 \"主标题 \"是作为包含 div 的最后一个块提供的。\n",
        "\n",
        "\n",
        "\n",
        "#### Computations|计算方法\n",
        "\n",
        "还可以交叉引用通过计算执行的代码所创建的表格。为此，请添加 `label` 和 `tbl-cap` 单元格选项。例如\n",
        "\n",
        "```{{r}}\n",
        "#| label: tbl-iris\n",
        "#| tbl-cap: \"Iris Data\"\n",
        "\n",
        "library(knitr)\n",
        "kable(head(iris))\n",
        "```\n",
        "\n",
        "![](/docs/authoring/images/crossref-table-knitr.png){fig-alt=\"Example table output.\" fig-align=\"center\" width=\"80%\"}\n",
        "\n",
        "\n",
        "::: {.callout-tip}\n",
        "\n",
        "## Computed Captions\n",
        "\n",
        "If you need to generate a dynamic caption, instead of using the `fig-cap` or `tbl-cap` code cell option, combine inline code with the [Cross-Reference Div Syntax](/docs/authoring/cross-references-divs.qmd#computed-captions).\n",
        "\n",
        ":::\n",
        "\n",
        "\n",
        "\n",
        "还可以在一个代码单元格中创建多个表格，并将它们作为子表格引用。为此，请添加一个包含子表头数组的 `tbl-subcap` 选项。例如\n",
        "\n",
        "```{{r}}\n",
        "#| label: tbl-tables\n",
        "#| tbl-cap: \"Tables\"\n",
        "#| tbl-subcap:\n",
        "#|   - \"Cars\"\n",
        "#|   - \"Pressure\"\n",
        "#| layout-ncol: 2\n",
        "\n",
        "library(knitr)\n",
        "kable(head(cars))\n",
        "kable(head(pressure))\n",
        "```\n",
        "\n",
        "![](/docs/authoring/images/crossref-subtable-knitr.png){fig-alt=\"Two tables side-by-side. Each table has 2 columns and 8 rows. The table on the left is titled '(a) Cars'. The table on the right is titled '(b) Pressure'. Centered underneath both tables is the text 'Table 1: Tables.'\" fig-align=\"center\" width=\"80%\"}\n",
        "\n",
        "如果希望子表标题只包含标识符（如\"(a)\"）而不包含文本标题，则应指定 `tbl-subcap: true` 而不是提供明确的子标题文本：\n",
        "\n",
        "```{{r}}\n",
        "#| label: tbl-tables\n",
        "#| tbl-cap: \"Tables\"\n",
        "#| tbl-subcap: true\n",
        "#| layout-ncol: 2\n",
        "\n",
        "library(knitr)\n",
        "kable(head(cars))\n",
        "kable(head(pressure))\n",
        "```\n",
        "\n",
        "![](/docs/authoring/images/crossref-subtable-nocaption-knitr.png){fig-align=\"center\" width=\"80%\"}\n",
        "\n",
        "\n",
        "### Code Listings|代码列表\n",
        "\n",
        "要创建一个可引用的代码块，可添加一个 `#lst-` 标识符和一个 `lst-cap` 属性。例如\n",
        "\n",
        "```` markdown\n",
        "```{#lst-customers .sql lst-cap=\"Customers Query\"}\n",
        "SELECT * FROM Customers\n",
        "```\n",
        "\n",
        "Then we query the customers database (@lst-customers).\n",
        "````\n",
        "\n",
        "\n",
        "To create a cross-reference to a code listing using div syntax, create a fenced div with an id starting with `lst-`, include the code cell followed by the caption inside the div:   \n",
        "\n",
        "````markdown\n",
        "::: {#lst-customers}\n",
        "\n",
        "```{.sql}\n",
        "SELECT * FROM Customers\n",
        "```\n",
        "\n",
        "Customers Query\n",
        "\n",
        ":::\n",
        "````\n",
        "\n",
        "\n",
        "\n",
        "您可以在 [交叉引用 div 语法](cross-references-divs.qmd \"Cross-Reference Div Syntax\") 中阅读有关使用 div 语法进行代码列表的更多信息。\n",
        "\n",
        "\n",
        "To cross-reference code from an executable code block, add the code cell options `lst-label` and `lst-cap`. The option `lst-label` provides the cross reference identifier and must begin with the prefix `lst-` to be treated as a code listing. The value of `lst-cap` provides the caption for the code listing. For example:\n",
        "\n",
        "````{.markdown}\n",
        "```{{python}}\n",
        "#| lst-label: lst-import\n",
        "#| lst-cap: Import pyplot\n",
        "\n",
        "import matplotlib.pyplot as plt\n",
        "```\n",
        "\n",
        "@lst-import...\n",
        "````\n",
        "\n",
        "When rendered, this results in the following:\n",
        "\n",
        "::: {.border .p-3}\n"
      ],
      "id": "331bb9bc"
    },
    {
      "cell_type": "code",
      "metadata": {},
      "source": [
        "#| lst-label: lst-import\n",
        "#| lst-cap: Import pyplot\n",
        "\n",
        "import matplotlib.pyplot as plt"
      ],
      "id": "66df3eaf",
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "metadata": {},
      "source": [
        "@lst-import...\n",
        "\n",
        ":::\n",
        "\n",
        "If the code cell produces a figure or table, you can combine the `lst-` options with `label` and `fig-cap`/`tbl-cap` to create cross references to both the code and output:\n",
        "\n",
        "````{.markdown}\n",
        "```{{python}}\n",
        "#| label: fig-plot\n",
        "#| fig-cap: Figure caption\n",
        "#| lst-label: lst-plot\n",
        "#| lst-cap: Listing caption\n",
        "\n",
        "plt.plot([1,23,2,4])\n",
        "plt.show()\n",
        "```\n",
        "\n",
        "The code in @lst-plot produces the figure in @fig-plot.\n",
        "````\n",
        "\n",
        "When rendered, this produces the following output:\n",
        "\n",
        ":::{.border .p-3}\n"
      ],
      "id": "cf70b85c"
    },
    {
      "cell_type": "code",
      "metadata": {},
      "source": [
        "#| label: fig-plot\n",
        "#| fig-cap: Figure caption\n",
        "#| lst-label: lst-plot\n",
        "#| lst-cap: Listing caption\n",
        "\n",
        "plt.plot([1,23,2,4])\n",
        "plt.show()"
      ],
      "id": "fig-plot",
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "metadata": {},
      "source": [
        "The code in @lst-plot produces the plot in @fig-plot.\n",
        ":::\n",
        "\n",
        "\n",
        "\n",
        "## Callouts|提示\n",
        "\n",
        "\n",
        "要交叉引用提示，请添加一个以相应提示前缀开头的 ID 属性（请参阅 @tbl-callout-prefixes）。然后就可以使用通常的 `@`语法引用调用。例如，在这里我们将 ID `#tip-example` 添加到提示中，然后再引用它：\n",
        "\n",
        "``` markdown\n",
        "::: {#tip-example .callout-tip}\n",
        "## 交叉引用提示\n",
        "\n",
        "添加以 `#tip-` 开头的 ID 以引用 `tip`。\n",
        ":::\n",
        "\n",
        "See @tip-example...\n",
        "```\n",
        "\n",
        "渲染如下：\n",
        "\n",
        "::: {.border .p-3}\n",
        "::: {#tip-example .callout-tip}\n",
        "## 交叉引用提示\n",
        "\n",
        "添加以 `#tip-` 开头的 ID 以引用 `tip`。\n",
        ":::\n",
        "\n",
        "See @tip-example...\n",
        ":::\n",
        "\n",
        "添加以 `#tip-` 开头的以`ID`引用 `tip`。\n",
        "\n",
        "| Callout Type | Prefix  |\n",
        "|--------------|---------|\n",
        "| `note`       | `#nte-` |\n",
        "| `tip`        | `#tip-` |\n",
        "| `warning`    | `#wrn-` |\n",
        "| `important`  | `#imp-` |\n",
        "| `caution`    | `#cau-` |\n",
        "\n",
        ": 提示交叉引用的前缀 {#tbl-callout-prefixes}\n",
        "\n",
        "\n",
        "\n",
        "## Theorems and Proofs\n",
        "\n",
        "定理常用于数学文章和书籍中。要包含一个可参考的定理，请创建一个带有 `#thm-` 标签（或下文描述的其他定理类型标签之一）的 div。您还需要通过块中的第一个标题指定定理名称。您可以在 div 中包含任何内容。例如\n",
        "\n",
        "``` markdown\n",
        "::: {#thm-line}\n",
        "\n",
        "## Line\n",
        "\n",
        "任何直线方程都称为线性方程，可写成：\n",
        "\n",
        "$$\n",
        "y = mx + b\n",
        "$$\n",
        ":::\n",
        "\n",
        "See @thm-line.\n",
        "```\n",
        "\n",
        "![](images/crossref-theorem.png){fig-alt=\"A snippet of a LaTeX document. The first line reads: 'Thereom 1 (Line) The equation of any straight line, called a linear equation, can be written as:' Cenetered on a separate line is the equation 'y = mx + b'. The text 'See thm. 1' is aligned to the left underneath that.\"}\n",
        "\n",
        "对于 LaTeX 输出，使用 [amsthm](https://ctan.org/pkg/amsthm?lang=en) 软件包对定理进行排版。对于其他格式，则使用适当的处理方法（以上是 HTML 输出的示例）。\n",
        "\n",
        "支持多种定理变体，每种变体都有自己的标签前缀：\n",
        "\n",
        "| **Label Prefix** | **Printed Name** | **LaTeX Environment** |\n",
        "|------------------|------------------|-----------------------|\n",
        "| `#thm-`          | Theorem          | theorem               |\n",
        "| `#lem-`          | Lemma            | lemma                 |\n",
        "| `#cor-`          | Corollary        | corollary             |\n",
        "| `#prp-`          | Proposition      | proposition           |\n",
        "| `#cnj-`          | Conjecture       | conjecture            |\n",
        "| `#def-`          | Definition       | definition            |\n",
        "| `#exm-`          | Example          | example               |\n",
        "| `#exr-`          | Exercise         | exercise              |\n",
        "| `#sol-`          | Solution         | solution              |\n",
        "| `#rem-`          | Remark           | remark                |\n",
        "\n",
        "proof 环境的排版与定理类似，但没有编号（因此无法交叉引用）。要创建证明，请在 div 中添加 `.proof` 类：\n",
        "\n",
        "``` markdown\n",
        "::: {.proof}\n",
        "By induction.\n",
        ":::\n",
        "```\n",
        "\n",
        "与定理一样，您也可以选择在 div 的第一个元素中包含一个标题（或一个 `name` 属性），以便在排版时为环境添加标题（标题通常出现在环境标题之后的括号中）。\n",
        "\n",
        "对于 LaTeX 输出，[amsthm](https://ctan.org/pkg/amsthm?lang=en) 软件包用于对这些环境进行排版。对于其他格式，也会使用类似的处理方法，但您可以使用 CSS 进一步自定义。\n",
        "\n",
        "## Equations|公式\n",
        "\n",
        "在公式后紧跟一个 `#eq-` 标签，使其可被引用。例如\n",
        "\n",
        "``` markdown\n",
        "Black-Scholes（@eq-black-scholes）是一个数学模型，旨在解释金融衍生品（最常见的是期权）的行为：\n",
        "\n",
        "$$\n",
        "\\frac{\\partial \\mathrm C}{ \\partial \\mathrm t } + \\frac{1}{2}\\sigma^{2} \\mathrm S^{2}\n",
        "\\frac{\\partial^{2} \\mathrm C}{\\partial \\mathrm C^2}\n",
        "  + \\mathrm r \\mathrm S \\frac{\\partial \\mathrm C}{\\partial \\mathrm S}\\ =\n",
        "  \\mathrm r \\mathrm C \n",
        "$$ {#eq-black-scholes}\n",
        "```\n",
        "\n",
        "Black-Scholes（@eq-black-scholes）是一个数学模型，旨在解释金融衍生品（最常见的是期权）的行为：\n",
        "\n",
        "\n",
        "$$\n",
        "\\frac{\\partial \\mathrm C}{ \\partial \\mathrm t } + \\frac{1}{2}\\sigma^{2} \\mathrm S^{2}\n",
        "\\frac{\\partial^{2} \\mathrm C}{\\partial \\mathrm S^2}\n",
        "  + \\mathrm r \\mathrm S \\frac{\\partial \\mathrm C}{\\partial \\mathrm S}\\ =\n",
        "  \\mathrm r \\mathrm C \n",
        "$$ {#eq-black-scholes}\n",
        "\n",
        "请注意，方程编号（通过 `\\qquad`）包含在方程的右边空白处。\n",
        "\n",
        "## Sections|章节\n",
        "\n",
        "要引用章节，请在任何标题下添加 `#sec-` 标识符。例如\n",
        "\n",
        "``` markdown\n",
        "## Introduction {#sec-introduction}\n",
        "\n",
        "See @sec-introduction for additional context.\n",
        "```\n",
        "\n",
        "请注意，在使用章节交叉引用时，您还需要启用 `number-sections`选项（以便读者可以看到章节编号）。例如\n",
        "\n",
        "``` yaml\n",
        "---\n",
        "title: \"My Document\"\n",
        "number-sections: true\n",
        "---\n",
        "```\n"
      ],
      "id": "1a0d8011"
    }
  ],
  "metadata": {
    "kernelspec": {
      "name": "python3",
      "language": "python",
      "display_name": "Python 3 (ipykernel)",
      "path": "C:\\Users\\13419\\AppData\\Roaming\\Python\\share\\jupyter\\kernels\\python3"
    }
  },
  "nbformat": 4,
  "nbformat_minor": 5
}