{{< include ../_require-1.3.qmd >}}

以下章节介绍了控制 Mermaid图表颜色主题的方法：

- 使用当前文档主题。
- 通过 YAML 选项使用Mermaid自己的颜色主题。
- 使用 SCSS 和 CSS 变量。

### Mermaid图表的默认颜色

如果你使用 Quarto 的 [bootswatch 内置主题](../output-formats/html-themes.qmd "bootswatch built-in themes")，包括默认主题或使用相同 SCSS 变量的自定义主题，你的Mermaid图表将自动遵循你的主题。

- Darkly
- Sandstone
- Vapor

以下示例用 Quarto 的几个内置引导主题演示了这一点。

::: panel-tabset

## Darkly

![](images/mermaid-darkly.png){fig-alt="A screenshot of a Mermaid flowchart in a document using bootswatch's Darkly theme."}

## Sandstone

![](images/mermaid-sandstone.png){fig-alt="A screenshot of a Mermaid flowchart in a document using bootswatch's Sandstone theme."}

## Vapor

![](images/mermaid-vapor.png){fig-alt="A screenshot of a Mermaid flowchart in a document using bootswatch's Vapor theme."}
:::

关于 Bootstrap 的 SCSS 变量与 Quarto 的Mermaid SCSS 变量之间的对应关系以及如何更改，请参阅下面的 [定制Mermaid主题](#customizing-mermaid "Customizing the Mermaid Theme").

### Mermaid的内置主题

如果你想使用Mermaid自己的主题，可以通过在 YAML 前端配置 `mermaid` 选项来实现：

``` yml
format:
  html:
    mermaid:
      theme: forest
```

Mermaid的可用主题有 默认`default`, `dark`, `forest`, and `neutral`。

::: panel-tabset
## default

![](images/mermaid-default.png){fig-alt="A screenshot of a Mermaid flowchart using the Mermaid's default theme."}

## dark|黑暗

![](images/mermaid-dark.png){fig-alt="A screenshot of a Mermaid flowchart using the Mermaid's dark theme."}

## forest|森林

![](images/mermaid-forest.png){fig-alt="A screenshot of a Mermaid flowchart using the Mermaid's forest theme."}

## neutral|中性

![](images/mermaid-neutral.png){fig-alt="A screenshot of a Mermaid flowchart using the Mermaid's neutral theme."}

:::

### 定制Mermaid主题 {#customizing-mermaid}

Quarto 提供了自己的 Mermaid SCSS 和 CSS 变量，这些变量可被覆盖，以便对图表主题进行自定义。SCSS 变量及其默认值如下：

<!-- This comes from quarto-dev/quarto-cli/src/resources/formats/html/_quarto-rules.scss -->

``` scss
$mermaid-bg-color: $body-bg;
$mermaid-edge-color: $secondary;
$mermaid-node-fg-color: $body-color;
$mermaid-fg-color: $body-color;
$mermaid-fg-color--lighter: lighten($body-color, 10%);
$mermaid-fg-color--lightest: lighten($body-color, 20%);
$mermaid-font-family: $font-family-sans-serif;
$mermaid-label-bg-color: $body-bg;
$mermaid-label-fg-color: $primary;
$mermaid-node-bg-color: rgba($primary, 0.1);
$mermaid-node-fg-color: $primary;

```

CSS 变量对应的是：

``` css
:root {
  --mermaid-bg-color: #{$mermaid-bg-color};
  --mermaid-edge-color: #{$mermaid-edge-color};
  --mermaid-node-fg-color: #{$mermaid-node-fg-color};
  --mermaid-fg-color: #{$mermaid-fg-color};
  --mermaid-fg-color--lighter: #{$mermaid-fg-color--lighter};
  --mermaid-fg-color--lightest: #{$mermaid-fg-color--lightest};
  --mermaid-font-family: #{$mermaid-font-family};
  --mermaid-label-bg-color: #{$mermaid-label-bg-color};
  --mermaid-label-fg-color: #{$mermaid-label-fg-color};
  --mermaid-node-bg-color: #{$mermaid-node-bg-color};
  --mermaid-node-fg-color: #{$mermaid-node-fg-color};
}
```
例如，要为节点背景提供自定义颜色，您可以[添加自定义 CSS 样式表](../../output-formats/html-basics.html#css-styles "add a custom CSS stylesheet")，其中包含:

```css
:root {
  --mermaid-node-bg-color: #375a7f;
}
```

可以在 Quarto 源代码文件 [embed-mermaid.css](https://github.com/quarto-dev/quarto-cli/blob/main/src/resources/formats/html/mermaid/embed-mermaid.css) 中找到 Quarto 变量与Mermaid本地 CSS 类之间的对应关系。